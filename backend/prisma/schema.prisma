// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//criar migration
//yarn prisma migrate dev
model User {
  id            String         @id @default(uuid()) //id com primary key
  name          String
  email         String
  password      String
  created_at    DateTime?      @default(now())
  updated_at    DateTime?      @default(now())
  orders        Order[]
  orderAccounts OrderAccount[]

  @@map("users")
}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  products   Product[]
  sizes      Size[]

  @@map("categories")
}

model Product {
  id          String    @id @default(uuid())
  name        String
  price       String
  description String?
  banner      String?
  tamanho     String?
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  category    Category @relation(fields: [category_id], references: [id])
  category_id String
  items       Item[]

  @@map("products")
}

model Order {
  id      String  @id @default(uuid())
  table   Int
  status  Boolean @default(false)
  draft   Boolean @default(true)
  name    String?
  garcom  String
  user_id String

  created_at    DateTime?      @default(now())
  updated_at    DateTime?      @default(now())
  items         Item[]
  orderAccounts OrderAccount[]
  users         User           @relation(fields: [user_id], references: [id])

  @@map("orders")
}

model Item {
  id     String @id @default(uuid())
  amount Int

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
  order_id   String
  product_id String
  price      String
  draft      Boolean @default(true)

  @@map("items")
}

model Size {
  id   String @id @default(uuid())
  name String

  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  category    Category @relation(fields: [category_id], references: [id])
  category_id String

  @@map("sizes")
}

model OrderAccount {
  id             String    @id @default(uuid())
  valor_conta    String
  conta_comissao String
  valor_comissao String
  created_at     DateTime? @default(now())
  garcom         String
  order_id       String
  user_id        String

  order Order @relation(fields: [order_id], references: [id])
  user  User  @relation(fields: [user_id], references: [id])

  @@map("orderAccounts")
}
